import json

from vkbottle.bot import Bot, Message
from vkbottle import Keyboard, Text, KeyboardButtonColor
from vkbottle_types import GroupTypes
from vkbottle_types.events import GroupEventType
from vkcoinapi import *
coin = VKCoin(key='rGFC#ONxp3KdR5d3pq_mM82hAfYpn9xwjJFNV5v[83Vjr=Thsa', merchantId=494089789)

bot = Bot("66697a7990c2b21a36eccc3a5082ca88debe845b40da2119bae68a52615c4293203ab2dcb63eab4d6fe8a")

ref1 = '100000'
ref2 = '250000'


def reg(message):
    data = json.load(open('data.json', 'r'))
    if str(message.from_id) not in data['balance']:
        if message.ref is not None:
            data['balance'][str(message.from_id)] = '0'
            data['refs'][str(message.from_id)] = {}
            data['refs'][str(message.ref)][str(message.from_id)] = '1'
            data['id'][str(message.from_id)] = str(len(data['id']) + 1)
        else:
            data['balance'][str(message.from_id)] = '0'
            data['refs'][str(message.from_id)] = {}
            data['id'][str(message.from_id)] = str(len(data['id']) + 1)
        json.dump(data, open('data.json', 'w'))
    else:
        pass


main = (
    Keyboard()
        .add(Text('üåà –ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ. —Å—Å—ã–ª–∫—É'), color=KeyboardButtonColor.POSITIVE)
        .row()
        .add(Text('üíé –ü—Ä–æ—Ñ–∏–ª—å'), color=KeyboardButtonColor.PRIMARY)
        .row()
        .add(Text('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'), color=KeyboardButtonColor.NEGATIVE)
        .add(Text('üíµ –í—ã–≤–æ–¥'), color=KeyboardButtonColor.NEGATIVE)
        .add(Text('üéà –†–µ–∫–ª–∞–º–∞'), color=KeyboardButtonColor.NEGATIVE)
)


@bot.on.message(text=['–ù–∞—á–∞—Ç—å', '–Ω–∞—á–∞—Ç—å'])
async def hello(message: Message):
    reg(message)
    await message.answer(f'''ü•§ –ü—Ä–∏–≤–µ—Ç !
–í —ç—Ç–æ–º –±–æ—Ç–µ —Ç—ã –∑–∞ –∫–∞–∂–¥–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å, —Ç—ã –ø–æ–ª—É—á–∏—à—å {ref2} VKcoin''', keyboard=main)


@bot.on.message(text=['üåà –ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ. —Å—Å—ã–ª–∫—É'])
async def hello(message: Message):
    reg(message)
    await message.answer(f'''üåü –¢–≤–æ—è —Ä–µ—Ñ. —Å—Å—ã–ª–∫–∞ - https://vk.me/pieref?ref={message.from_id}

üíé –ó–∞ –∫–∞–∂–¥–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å {ref2} VKcoin''')


@bot.on.message(text=['üíé –ü—Ä–æ—Ñ–∏–ª—å'])
async def hello(message: Message):
    reg(message)
    data = json.load(open('data.json', 'r'))
    await message.answer(f'''üëæ id - {data['id'][str(message.from_id)]}

üí∞ –ë–∞–ª–∞–Ω—Å - {data['balance'][str(message.from_id)]} VKcoin

üë™ –†–µ—Ñ–µ—Ä–∞–ª–æ–≤ - {len(data['refs'][str(message.from_id)])}''', keyboard=main)



@bot.on.message(text=['üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'])
async def hello(message: Message):
    reg(message)
    data = json.load(open('data.json', 'r'))
    await message.answer(f'''üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -

‚ö° –í—Å–µ–≥–æ –≤—ã–≤–µ–¥–µ–Ω–æ {data['balance'][str(message.from_id)]} VKcoin.

üí• –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤ {len(data['balance'])}''', keyboard=main)

@bot.on.message(text=['üíµ –í—ã–≤–æ–¥'])
async def hello(message: Message):
    reg(message)
    data = json.load(open('data.json', 'r'))
    if coin.getBalance()['response']['494089789'] < int(data['balance'][str(message.from_id)]):
        await message.answer('üåü –£–ø—Å... –ë–∞–ª–∞–Ω—Å–∞ –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –æ–∂–∏–¥–∞–π –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ...')

    else:
        coin.sendPayment(to=message.from_id, amount=int(data['balance'][str(message.from_id)])*1000)
        await message.answer(f'üíµ –£—Å–ø–µ—à–Ω–æ –≤—ã–≤–µ–¥–µ–Ω–æ {data["balance"][str(message.from_id)]} VKcoin.', keyboard=main)
        data['>'] = str(int(data['>']) + int(data['balance'][str(message.from_id)]))
        data['balance'][str(message.from_id)] = '0'
        json.dump(data, open('data.json', 'w'))


@bot.on.message(text=['üéà –†–µ–∫–ª–∞–º–∞'])
async def hello(message: Message):
    reg(message)
    await message.answer('''üí∞ –ö—É–ø–∏—Ç—å —Ä–µ–∫–ª–∞–º—É (—Ä–∞—Å—Å—ã–ª–∫–∞, –ø–æ—Å—Ç) –º–æ–∂–Ω–æ —É –Ω–µ–≥–æ: https://vk.com/i_to_nuzhen_nenado''', keyboard=main)



@bot.on.raw_event(GroupEventType.GROUP_JOIN, dataclass=GroupTypes.GroupJoin)
async def group_join_handler(event: GroupTypes.GroupJoin):
    user_id = event.object.user_id
    data = json.load(open('data.json', 'r'))
    for i in data['refs']:
        if len(i) >= 1:
            if str(user_id) in data['refs'][i]:
                if data['refs'][i][str(user_id)] == '1':
                    data['balance'][str(user_id)] = str(int(data['balance'][str(user_id)]) + int(ref1))
                    data['balance'][str(i)] = str(int(data['balance'][str(i)]) + int(ref2))
                    data['refs'][str(i)][str(user_id)] = '2'
                    json.dump(data, open('data.json', 'w'))

                    await bot.api.messages.send(random_id=0,
                                                    user_id=int(i),
                                                    message=f'üíé –¢–≤–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –≥—Ä—É–ø–ø—É, –Ω–∞ —Ç–≤–æ–π –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ {ref2} VKcoin.')



bot.run_forever()
